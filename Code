# Import libraries
import pandas as pd
from sklearn.neighbors import LocalOutlierFactor

# Sample data (replace with your actual dataset)
data = pd.DataFrame({
    'Category': ['A', 'A', 'A', 'B', 'B', 'B', 'C', 'C', 'C'],
    'Numerical_Variable': [10, 12, 11, 50, 49, 52, 100, 101, 99],  # Numerical data
    'Other_Column': ['X', 'Y', 'Z', 'X', 'Y', 'Z', 'X', 'Y', 'Z']   # Other columns
})

# Function to detect outliers in each category
def detect_outliers_in_category(group):
    X = group['Numerical_Variable'].values.reshape(-1, 1)
    lof = LocalOutlierFactor(n_neighbors=2)  # Adjust n_neighbors based on your data size
    group['Outlier'] = lof.fit_predict(X)  # -1 for outliers, 1 for inliers
    return group

# Apply the LOF to each category
result = data.groupby('Category').apply(detect_outliers_in_category)

# Optional: Keep only the outliers and merge with other columns
result_with_outliers = data.merge(result[['Numerical_Variable', 'Outlier']], 
                                  on='Numerical_Variable', how='left')

# Display the final result
print(result_with_outliers)

# Save to CSV
result_with_outliers.to_csv('outlier_detection_by_category.csv', index=False)
