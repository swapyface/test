# Import libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.neighbors import LocalOutlierFactor

# Sample data
data = pd.DataFrame({
    'numerical_variable': [10, 12, 11, 14, 15, 13, 100, 14, 12, 13, 11, 10, 12] # example data with an outlier
})

# Reshape the data to 2D array as required by LOF
X = data['numerical_variable'].values.reshape(-1, 1)

# Apply Local Outlier Factor
lof = LocalOutlierFactor(n_neighbors=20)  # You can adjust the number of neighbors
outliers = lof.fit_predict(X)

# Mark outliers
data['outlier'] = outliers  # -1 indicates outlier, 1 indicates inlier

# Display the results
print(data)

# Optional: Visualize the results
plt.scatter(data.index, data['numerical_variable'], c=data['outlier'], cmap='coolwarm')
plt.xlabel('Index')
plt.ylabel('Numerical Variable')
plt.title('Outlier Detection using LOF')
plt.show()
