# Import libraries
import numpy as np
import pandas as pd

# Sample data (replace with your actual dataset)
data = pd.DataFrame({
    'Category': ['A', 'A', 'A', 'B', 'B', 'B', 'C', 'C', 'C'],
    'Numerical_Variable': [10, 12, 11, 50, 49, 52, 100, 101, 99],  # Numerical data
    'Other_Column': ['X', 'Y', 'Z', 'X', 'Y', 'Z', 'X', 'Y', 'Z']   # Other columns
})

# Function to calculate MAD and detect outliers for each group
def detect_outliers_mad(group, threshold=3.0):
    # Calculate the median of the group
    median = group['Numerical_Variable'].median()
    
    # Calculate the absolute deviations from the median
    mad = np.median(np.abs(group['Numerical_Variable'] - median))
    
    # Calculate the modified Z-score (to detect outliers)
    modified_z_score = 0.6745 * (group['Numerical_Variable'] - median) / mad
    
    # Flag outliers based on the threshold (use Yes/No instead of True/False)
    group['Outlier'] = np.where(np.abs(modified_z_score) > threshold, 'Yes', 'No')
    return group

# Apply the MAD-based outlier detection to each category and retain all columns
result = data.groupby('Category').apply(detect_outliers_mad).reset_index(drop=True)

# Display the final result with Yes/No labels
print(result)

# Save to CSV with Yes/No labels
result.to_csv('outlier_detection_by_category_mad_yes_no.csv', index=False)
