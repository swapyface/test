
import pandas as pd
from statsmodels.tsa.ar_model import AutoReg
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Generate sample time series data
# You can replace this with your actual time series data
data = [i + (i % 10) for i in range(1, 101)]  # 100 data points with some trend
data = pd.Series(data)

# Plot the data
plt.plot(data)
plt.title("Sample Time Series Data")
plt.show()

# Split into train and test sets
train_size = int(len(data) * 0.8)
train, test = data[:train_size], data[train_size:]

# Fit AutoRegression (AR) model
# 'lags' indicates the number of lag observations to include
model = AutoReg(train, lags=3)
model_fit = model.fit()

# Make predictions
predictions = model_fit.predict(start=len(train), end=len(train) + len(test) - 1, dynamic=False)

# Evaluate the model
mse = mean_squared_error(test, predictions)
print(f'Mean Squared Error: {mse}')

# Plot the predictions against the actual test data
plt.plot(test.index, test, label='Actual')
plt.plot(test.index, predictions, color='red', label='Predicted')
plt.legend()
plt.title("AutoRegression Forecast")
plt.show()