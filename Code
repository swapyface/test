import pandas as pd
from sklearn.linear_model import LinearRegression

# Sample data
data = {
    'rating': ['AAA', 'AA', 'A', 'BBB', 'BB', 'B', 'C'],
    'subordination': ['Senior Secured', 'Senior Unsecured', 'Subordinated', 'Junior Subordinated', 'Senior Secured', 'Subordinated', 'Junior Subordinated'],
    'industry_level': ['Sovereign', 'Financial', 'Industrial', 'Industrial', 'Financial', 'Sovereign', 'Industrial'],
    'target': [0.5, 0.6, 0.7, 0.4, 0.3, 0.2, 0.1]
}

df = pd.DataFrame(data)

# Define weight mappings
rating_weights = {'AAA': 70, 'AA': 60, 'A': 50, 'BBB': 40, 'BB': 30, 'B': 20, 'C': 10}
subordination_weights = {'Senior Secured': 8, 'Senior Unsecured': 6, 'Subordinated': 4, 'Junior Subordinated': 2}
industry_weights = {'Sovereign': 3, 'Financial': 2, 'Industrial': 1}

# Map weights to create new columns
df['rating_weight'] = df['rating'].map(rating_weights)
df['subordination_weight'] = df['subordination'].map(subordination_weights)
df['industry_weight'] = df['industry_level'].map(industry_weights)

# Prepare features and target
X = df[['rating_weight', 'subordination_weight', 'industry_weight']]
y = df['target']

# Fit the regression model
model = LinearRegression()
model.fit(X, y)

# Make predictions
predictions = model.predict(X)
print(predictions)