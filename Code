import pandas as pd

# Read the CSV file
data = pd.read_csv("your_file.csv")

# Filter rows where 'product type' starts with 'bond' and 'asset type' is 'security'
filtered_data = data[(data['product type'].str.startswith("bond")) & (data['asset type'] == "security")]

# Display the filtered data
print(filtered_data)


import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.svm import SVR
from sklearn.metrics import r2_score
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

# Load your data
data = pd.read_csv('your_data.csv')

# Separate features and target
X = data.drop(columns=['target_column', 'identifier1', 'identifier2'])  # Drop identifiers
y = data['target_column']

# Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Define preprocessor for numeric and categorical features
preprocessor = ColumnTransformer(
    transformers=[
        ('num', StandardScaler(), X.select_dtypes(include=['float64', 'int']).columns),
        ('cat', OneHotEncoder(drop='first'), X.select_dtypes(include=['object']).columns)
    ])

# Create a pipeline with preprocessor and SVR model
pipeline = Pipeline([
    ('preprocessor', preprocessor),
    ('regressor', SVR())
])

# Train the model
pipeline.fit(X_train, y_train)

# Predict and evaluate
y_pred = pipeline.predict(X_test)
model_score = r2_score(y_test, y_pred)
print("Model R^2 Score:", model_score)

# Save predictions on test data to CSV
predictions = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
predictions.to_csv('svr_predictions.csv', index=False)