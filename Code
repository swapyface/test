import pickle
import pandas as pd

# Load Preprocessing, Model, and Parameters
with open("preprocessing.pkl", "rb") as f:
    scaler = pickle.load(f)

with open("model.pkl", "rb") as f:
    iso_model = pickle.load(f)

with open("parameters.pkl", "rb") as f:
    required_columns = pickle.load(f)

# Use the loaded files
print("Required Columns:", required_columns)

# Example Data (replace with real input)
test_data = pd.DataFrame({
    "column1": [2],
    "column2": [5],
    "column3": [8]
})

# Preprocess and Predict
scaled_test_data = scaler.transform(test_data[required_columns])
predictions = iso_model.predict(scaled_test_data)
print("Predictions:", predictions)


all_parameters = {
    "size < 100": {"n_estimators": 20, "max_samples": "dataset_size", "contamination": 0.05, "max_features": 1.0},
    "100 < size <= 500": {"n_estimators": 50, "max_samples": 100, "contamination": 0.05, "max_features": 1.0},
    "500 < size <= 1000": {"n_estimators": 100, "max_samples": 256, "contamination": 0.05, "max_features": 1.0},
    "1000 < size <= 5000": {"n_estimators": 300, "max_samples": 500, "contamination": 0.05, "max_features": 1.0},
    "5000 < size <= 10000": {"n_estimators": 500, "max_samples": 1500, "contamination": 0.05, "max_features": 1.0},
    "10000 < size <= 50000": {"n_estimators": 1000, "max_samples": 3000, "contamination": 0.05, "max_features": 1.0},
    "50000 < size <= 100000": {"n_estimators": 1500, "max_samples": 5000, "contamination": 0.05, "max_features": 1.0},
    "100000 < size <= 300000": {"n_estimators": 2000, "max_samples": 6000, "contamination": 0.05, "max_features": 1.0},
    "300000 < size <= 500000": {"n_estimators": 5000, "max_samples": 15000, "contamination": 0.05, "max_features": 1.0},
    "500000 < size <= 1000000": {"n_estimators": 7000, "max_samples": 20000, "contamination": 0.05, "max_features": 1.0}
}

# Load the parameters dictionary from the pickle file
with open("all_model_parameters.pkl", "rb") as f:
    loaded_parameters = pickle.load(f)

print("Loaded Parameters:")
for key, value in loaded_parameters.items():
    print(f"{key}: {value}")

