def estimate_eps(data, k=5, min_eps=0.1):
    if len(data) < k:
        return min_eps  # Ensure a positive default value
    
    nbrs = NearestNeighbors(n_neighbors=min(k, len(data) - 1)).fit(data)
    distances, _ = nbrs.kneighbors(data)
    
    k_distances = np.sort(distances[:, k - 1])
    eps_value = np.percentile(k_distances, 90)  # Use the 90th percentile heuristic
    
    return max(eps_value, min_eps)  # Ensure eps is always posi
