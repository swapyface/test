import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

# Load your dataset
df = pd.read_csv("your_data.csv")  # Replace with your dataset

# Assuming columns: 'feature1', 'feature2', ..., 'y'
features = ['feature1', 'feature2']  # Replace with actual feature names
target = 'y'

# Filter data for Day 1
df_day1 = df[df['date'] == '2024-01-01']  # Replace with your actual date column

# Scaling features
scaler = StandardScaler()
X_train = scaler.fit_transform(df_day1[features])
y_train = df_day1[target].values

# Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Filter data for Day 2
df_day2 = df[df['date'] == '2024-01-02']

# Scale using the same scaler
X_test = scaler.transform(df_day2[features])
y_test = df_day2[target].values

# Predict y values
y_pred = model.predict(X_test)

# Identify outliers (if absolute error > 10)
threshold = 10
df_day2['error'] = np.abs(y_pred - y_test)
df_day2['outlier'] = df_day2['error'] > threshold

# Print the results
print(df_day2[['y', 'error', 'outlier']])
