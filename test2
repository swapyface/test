import pandas as pd

def find_excel_mismatches(file1_path, file2_path, key_columns):
    """
    Compares two Excel sheets based on specified key columns and prints mismatches.

    Args:
        file1_path (str): Path to the first Excel file.
        file2_path (str): Path to the second Excel file.
        key_columns (list): A list of column names to use as keys for comparison.
    """
    try:
        df1 = pd.read_excel(file1_path)
        df2 = pd.read_excel(file2_path)
    except FileNotFoundError as e:
        print(f"Error: File not found - {e}")
        return

    # Ensure key columns exist in both dataframes
    for col in key_columns:
        if col not in df1.columns or col not in df2.columns:
            print(f"Error: Key column '{col}' not found in one or both Excel files.")
            return

    # Create a combined key for each row
    df1['combined_key'] = df1[key_columns].astype(str).agg('-'.join, axis=1)
    df2['combined_key'] = df2[key_columns].astype(str).agg('-'.join, axis=1)

    # Merge the dataframes based on the combined key
    merged_df = pd.merge(df1, df2, on='combined_key', suffixes=('_file1', '_file2'), how='outer', indicator=True)

    mismatches_found = False

    # Iterate through rows where the key exists in both files
    both_files_df = merged_df[merged_df['_merge'] == 'both']
    for index, row in both_files_df.iterrows():
        mismatches = {}
        for col in df1.columns:
            if col not in key_columns and f"{col}_file1" in row and f"{col}_file2" in row:
                value1 = row[f"{col}_file1"]
                value2 = row[f"{col}_file2"]
                if pd.isna(value1) and not pd.isna(value2):
                    mismatches[col] = (None, value2)
                elif not pd.isna(value1) and pd.isna(value2):
                    mismatches[col] = (value1, None)
                elif not pd.isna(value1) and not pd.isna(value2) and value1 != value2:
                    mismatches[col] = (value1, value2)

        if mismatches:
            mismatches_found = True
            key_values = {key: row[f"{key}_file1"] for key in key_columns}
            print(f"Mismatch found for keys: {key_values}")
            for col, (val1, val2) in mismatches.items():
                print(f"  - Column: {col}, File 1 Value: {val1}, File 2 Value: {val2}")
            print("-" * 30)

    # Print rows present only in one of the files
    only_file1 = merged_df[merged_df['_merge'] == 'left_only']
    if not only_file1.empty:
        print("\nRows present only in File 1:")
        for index, row in only_file1.iterrows():
            key_values = {col: row[col] for col in key_columns}
            print(f"  - Keys: {key_values}")

    only_file2 = merged_df[merged_df['_merge'] == 'right_only']
    if not only_file2.empty:
        print("\nRows present only in File 2:")
        for index, row in only_file2.iterrows():
            key_values = {col: row[col] for col in key_columns}
            print(f"  - Keys: {key_values}")

    if not mismatches_found and only_file1.empty and only_file2.empty:
        print("\nNo mismatches found between the two Excel sheets based on the provided keys.")

if __name__ == "__main__":
    file1 = "uat_data.xlsx"  # Replace with the actual path to your UAT Excel file
    file2 = "prod_data.xlsx" # Replace with the actual path to your PROD Excel file
    key_columns_to_compare = ["item_id", "category", "product_name"] # Replace with your actual key column names

    find_excel_mismatches(file1, file2, key_columns_to_compare)
