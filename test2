!pip install pylint

import pylint.lint as lint
import io
import os
import tempfile
import sys

def run_pylint_from_code_block(code_block, pylint_opts="--disable=missing-module-docstring,C0114,C0115,C0116"):
    """Runs pylint on a block of code (string) and returns the report.

    Args:
        code_block: The Python code block as a string.
        pylint_opts: Pylint options (as a string).

    Returns:
        A tuple containing the pylint report and the return code.
    """

    with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as temp_file:
        temp_file_name = temp_file.name
        temp_file.write(code_block)  # Write the code block to the temp file

    args = [temp_file_name]
    args.extend(pylint_opts.split(','))

    old_stdout = sys.stdout
    old_stderr = sys.stderr
    sys.stdout = io.StringIO()
    sys.stderr = io.StringIO()

    try:
        lint.Run(args)
        report = sys.stdout.getvalue() + sys.stderr.getvalue()
        return_code = 0
    except SystemExit as ex:
        report = sys.stdout.getvalue() + sys.stderr.getvalue()
        return_code = ex.code if ex.code is not None else 1
    finally:
        sys.stdout = old_stdout
        sys.stderr = old_stderr
        os.remove(temp_file_name)  # Clean up

    return report, return_code


# Example Usage:
code_block = """
def example(a, b):
    return a + b

def another_function(x):
    return x * 2

# Example of a potential issue (unused variable):
y = 30  # This will likely trigger a warning.

"""

report, return_code = run_pylint_from_code_block(code_block)

print(report)

if return_code == 0:
    print("Pylint found no issues.")
else:
    print(f"Pylint found issues. Return code: {return_code}")


code_block2 = """
def my_function(a, b):
    '''This function adds two numbers.'''
    return a + b
"""
report2, return_code2 = run_pylint_from_code_block(code_block2)
print("\n--- Example with docstrings ---\n", report2)


code_block3 = """
def no_docstring(a, b):
    return a + b
"""
report3, return_code3 = run_pylint_from_code_block(code_block3)
print("\n--- Example with no docstrings ---\n", report3)
