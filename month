import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load your data (replace 'your_data.csv' with your file)
data = pd.read_csv('your_data.csv')

# 1. Descriptive Statistics:
print("Descriptive Statistics:")
print(data.describe())

# 2. Histograms:
data.hist(figsize=(12, 8))  # Adjust figure size as needed
plt.suptitle("Histograms of Features", fontsize=16) # Add a title
plt.tight_layout(rect=[0, 0.03, 1, 0.95]) # Adjust layout to prevent title from overlapping
plt.show()

# 3. Box Plots (for outlier detection):
plt.figure(figsize=(10, 6))
sns.boxplot(data=data)
plt.title("Box Plots of Features")
plt.xticks(rotation=45, ha='right') # Rotate x-axis labels if needed
plt.tight_layout()
plt.show()


# 4. Scatter Plots (to visualize relationships between features and target):
for feature in data.columns[:-1]:  # Exclude the last column (target)
    plt.figure(figsize=(8, 6))
    plt.scatter(data[feature], data['Market Value'])
    plt.xlabel(feature)
    plt.ylabel('Market Value')
    plt.title(f'Scatter Plot of Market Value vs. {feature}')
    plt.tight_layout()
    plt.show()

# 5. Correlation Matrix (to see linear relationships):
correlation_matrix = data.corr()
plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.tight_layout()
plt.show()

# 6. Skewness and Kurtosis:
print("\nSkewness:")
print(data.skew())
print("\nKurtosis:")
print(data.kurt())

# 7. Check for Missing Values:
print("\nMissing Values:")
print(data.isnull().sum())

# 8. Value Counts (for categorical features, if any):
# If you have categorical features, use this:
# for column in data.select_dtypes(include='object'): # Select object type columns
#     print(f"\nValue Counts for {column}:")
#     print(data[column].value_counts())

# 9. Quantile Analysis (for understanding data distribution):
print("\nQuantiles:")
print(data.quantile([0.05, 0.25, 0.5, 0.75, 0.95])) # Example quantiles

# 10. Pair Plots (for visualizing relationships between all pairs of variables):
sns.pairplot(data)
plt.suptitle("Pair Plots of All Variables", fontsize=16) # Add a title
plt.tight_layout(rect=[0, 0.03, 1, 0.95]) # Adjust layout to prevent title from overlapping
plt.show()

# 11. Statistical Tests (Examples):
# Example: Check for normality of 'Market Value' using Shapiro-Wilk test
from scipy.stats import shapiro
statistic, p_value = shapiro(data['Market Value'])
print(f"\nShapiro-Wilk Test for Market Value: statistic={statistic}, p-value={p_value}")

# Example: Check for correlation between two features
from scipy.stats import pearsonr
correlation, p_value = pearsonr(data['Original Face'], data['Market Value'])
print(f"\nPearsons correlation between Original Face and Market Value: correlation={correlation}, p-value={p_value}")
