import pandas as pd

def identify_market_value_outliers(df, tolerance=0.05):
    """
    Calculates Market Value, identifies outliers, and returns a DataFrame with outlier flags.

    Args:
        df: Pandas DataFrame with 'Original Face', 'Factor Analytic', 'Price', and 'Market Value' columns.
        tolerance: The percentage tolerance for outlier identification (default: 0.05 or 5%).

    Returns:
        Pandas DataFrame with an added 'Outlier' column (True for outlier, False for inlier).
    """

    # Calculate Market Value
    df['Calculated Market Value'] = (df['Original Face'] * df['Factor Analytic'] * df['Price']) / 100

    # Calculate percentage difference
    df['Percentage Difference'] = abs((df['Calculated Market Value'] - df['Market Value']) / df['Market Value']) * 100

    # Identify outliers
    df['Outlier'] = df['Percentage Difference'] > (tolerance * 100)  # Convert tolerance to percentage

    return df


def main():
    # Load your data (replace 'your_file.xlsx' with your actual file path)
    try:
        df = pd.read_excel('your_file.xlsx')  # Or pd.read_csv('your_file.csv') if it's a CSV
    except FileNotFoundError:
        print("Error: File not found. Please provide the correct file path.")
        return

    # Identify outliers
    df = identify_market_value_outliers(df)

    # Save the results to a new Excel file (replace 'output_file.xlsx' with your desired file name)
    try:
        df.to_excel('output_file.xlsx', index=False)
        print("Results saved to output_file.xlsx")
    except Exception as e:
        print(f"Error saving to Excel: {e}")


if __name__ == "__main__":
    main()
