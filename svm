import re
from datetime import datetime

# List of known formats
known_formats = [
    "%B %d, %Y", "%b %d, %Y", "%B %d %Y", "%b %d %Y",
    "%B %d", "%b %d",
    "%m/%d/%Y", "%m-%d-%Y", "%m/%d/%y", "%m-%d-%y",
    "%Y-%m-%d", "%Y/%m/%d",
    "%d %B %Y", "%d %b %Y", "%d-%b-%Y", "%d-%B-%Y",
    "%d.%m.%Y", "%m.%d.%Y", "%m.%d.%y",
    "%A, %B %d, %Y", "%a, %B %d, %Y", "%A %B %d %Y"
]

def clean_date_string(date_str):
    # Remove ordinal suffixes: 1st, 2nd, 3rd, 4th, etc.
    date_str = re.sub(r'(\d+)(st|nd|rd|th)', r'\1', date_str, flags=re.IGNORECASE)

    # Remove common phrases and time mentions
    date_str = re.sub(r'\bat\b.*', '', date_str)                  # Remove 'at 3PM' etc.
    date_str = re.sub(r'–.*', '', date_str)                       # Remove anything after en-dash
    date_str = re.sub(r'-.*', '', date_str)                       # Remove anything after dash
    date_str = re.sub(r'[^a-zA-Z0-9/,:\s]', '', date_str)         # Remove symbols like • or ~
    date_str = re.sub(r'\s+', ' ', date_str).strip()              # Clean extra spaces

    return date_str

def convert_to_mmddyyyy(date_str):
    cleaned = clean_date_string(date_str)
    has_year = any(len(part) == 4 and part.isdigit() for part in cleaned.split())
    for fmt in known_formats:
        try:
            dt = datetime.strptime(cleaned, fmt)
            if not has_year:
                dt = dt.replace(year=datetime.today().year)
            return dt.strftime("%m/%d/%Y")
        except ValueError:
            continue
    return f"Unrecognized format: {date_str}"

# === Test cases ===
test_dates = [
    "Jul 8",
    "Jul 8 at 3PM",
    "July 8 – block your calendar",
    "8th July 2025",
    "Tues, Jul 8th",
    "8th of July",
    "June 8, 2025",
    "8th-July-2025",
    "7/8/2025",
    "2025-07-08",
    "07.08.25"
]

for d in test_dates:
    print(f"{d:<35} → {convert_to_mmddyyyy(d)}")