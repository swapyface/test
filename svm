from sklearn.cluster import DBSCAN

def get_dbscan_params(n_samples):
    """Dynamically adjust DBSCAN parameters based on dataset size."""
    if n_samples > 100:
        eps = 0.5  
        min_samples = 10  
    elif n_samples > 50:
        eps = 0.4  
        min_samples = 5  
    elif n_samples > 20:
        eps = 0.3  
        min_samples = 3  
    else:
        eps = 0.2  
        min_samples = 2  
    return eps, min_samples

def run_dbscan_by_rating(df):
    """Apply DBSCAN to each rating separately with dynamic parameters."""
    results = []
    
    for rating, group in df.groupby('rating'):
        eps, min_samples = get_dbscan_params(len(group))
        db = DBSCAN(eps=eps, min_samples=min_samples)
        group['cluster'] = db.fit_predict(group[['price']])  
        results.append(group)
    
    return pd.concat(results)